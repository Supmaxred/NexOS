For more information while running calc, type  help  followed by one of the
following topics:

    topic		description
    -----		-----------
    intro		introduction to calc
    overview		overview of calc
    help		this file

    assoc		using associations
    builtin		builtin functions
    command		top level commands
    config		configuration parameters
    custom		information about the custom builtin interface
    define		how to define functions
    environment		how environment variables effect calc
    errorcodes		calc generated error codes
    expression		expression sequences
    file		using files
    history		command history
    interrupt		how interrupts are handled
    list		using lists
    mat			using matrices
    obj			user defined data types
    operator		math, relational, logic and variable access operators
    statement		flow control and declaration statements
    types		builtin data types
    unexpected		unexpected syntax/usage surprises for C programmers
    usage		how to invoke the calc command
    variable		variables and variable declarations

    bindings		input & history character bindings
    custom_cal		information about custom calc resource files
    libcalc		using the arbitrary precision routines in a C program
    new_custom		information about how to add new custom functions
    resource		standard calc resource files
    script		using calc shell scripts
    cscript		info on the calc shell scripts supplied with calc

    archive		where to get the latest versions of calc
    bugs		known bugs and mis-features
    changes		recent changes to calc
    contrib		how to contribute scripts, code or custom functions
    todo		list of priority action items for calc
    wishlist		wish list of future enhancements of calc

    credit		who wrote calc and who helped
    copyright		calc copyright and the GNU LGPL
    copying		details on the Calc GNU Lesser General Public License
    copying-lgpl	calc GNU Lesser General Public License text

    full		all of the above (in the above order)

For example:

    help usage

will print the calc command usage information.	One can obtain calc help
without invoking any startup code by running calc as follows:

    calc -q help topic

where 'topic' is one of the topics listed above.

You can also ask for help on a particular builtin function name.  For example:

    help asinh
    help round

See:

    help builtin

for a list of builtin functions.

Some calc operators have their own help pages:

    help =
    help ->
    help *
    help .
    help %
    help //
    help #

If the -m mode disallows opening files for reading or execution of programs,
then the help facility will be disabled.  See:

    help usage

for details of the -m mode.

The help command is able to display installed help files for custom builtin
functions.  However, if the custom name is the same as a standard help
file, the standard help file will be displayed instead.	 The custom help
builtin should be used to directly access the custom help file.

For example, the custom help builtin has the same name as the standard
help file.  That is:

    help help

will print this file only.  However the custom help builtin will print
only the custom builtin help file:

    custom("help", "help");

will by-pass a standard help file and look for the custom version directly.

As a hack, the following:

     help custhelp/anything

as the same effect as:

    custom("help", "anything");

The man command is an alias for the help command.  For example:

    man sin

Any help file that the help command is able to display may be
displayed by the man command.  The man command may only display
calc help files.

